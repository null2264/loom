diff --git a/build.gradle b/build.gradle
index 570cb354..37988d2f 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,10 +5,7 @@ plugins {
 	id 'idea'
 	id 'eclipse'
 	id 'groovy'
-	id 'checkstyle'
-	id 'codenarc'
 	alias(libs.plugins.kotlin)
-	alias(libs.plugins.spotless)
 	alias(libs.plugins.retry)
 }
 
@@ -22,7 +19,7 @@ tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
 	}
 }
 
-group = "dev.architectury"
+group = "io.github.null2264"
 def baseVersion = '1.10'
 
 def ENV = System.getenv()
@@ -210,61 +207,10 @@ java {
 	targetCompatibility = JavaVersion.VERSION_17
 }
 
-spotless {
-	lineEndings = com.diffplug.spotless.LineEnding.UNIX
-
-	java {
-		licenseHeaderFile(rootProject.file("HEADER")).yearSeparator("-")
-		targetExclude("**/loom/util/DownloadUtil.java", "**/loom/util/FileSystemUtil.java")
-		targetExclude("**/dev/architectury/**")
-	}
-
-	groovy {
-		importOrder('java', 'javax', '', 'net.fabricmc', '\\#')
-		licenseHeaderFile(rootProject.file("HEADER")).yearSeparator("-")
-		greclipse()
-	}
-
-	groovyGradle {
-		target 'src/**/*.gradle', '*.gradle'
-		greclipse()
-
-		targetExclude(
-				// These files use a @MAPPINGS@ token which is not valid Groovy
-				'**/projects/forge/simple/build.gradle',
-				'**/projects/neoforge/simple/build.gradle'
-				)
-	}
-
-	kotlin {
-		licenseHeaderFile(rootProject.file("HEADER")).yearSeparator("-")
-		targetExclude("**/build.gradle.kts")
-		targetExclude("src/test/resources/projects/*/**")
-		ktlint()
-	}
-}
-
-checkstyle {
-	configFile = file('checkstyle.xml')
-	toolVersion = libs.versions.checkstyle.get()
-}
-
-// Workaround https://github.com/gradle/gradle/issues/27035
-configurations.checkstyle {
-	resolutionStrategy.capabilitiesResolution.withCapability("com.google.collections:google-collections") {
-		select("com.google.guava:guava:0")
-	}
-}
-
-codenarc {
-	toolVersion = libs.versions.codenarc.get()
-	configFile = file("codenarc.groovy")
-}
-
 gradlePlugin {
 	plugins {
 		fabricLoom {
-			id = 'dev.architectury.loom'
+			id = 'io.github.null2264.architectury-loom'
 			implementationClass = 'net.fabricmc.loom.LoomGradlePlugin'
 		}
 	}
@@ -324,8 +270,8 @@ publishing {
 
 			// Manually crate the plugin marker for snapshot versions
 			snapshotPlugin(MavenPublication) {
-				groupId = 'dev.architectury.loom'
-				artifactId = 'dev.architectury.loom.gradle.plugin'
+				groupId = 'io.github.null2264.architectury-loom'
+				artifactId = 'io.github.null2264.architectury-loom.gradle.plugin'
 				version = baseVersion + '-SNAPSHOT'
 
 				pom.withXml({
@@ -346,11 +292,11 @@ publishing {
 	}
 
 	repositories {
-		if (ENV.MAVEN_PASS != null) {
+		if (ENV.MAVEN_URL != null) {
 			maven {
-				url = "https://deploy.shedaniel.me/"
+				url(ENV.MAVEN_URL)
 				credentials {
-					username = "shedaniel"
+					username = ENV.MAVEN_USER
 					password = ENV.MAVEN_PASS
 				}
 			}
diff --git a/gradle/versions.gradle b/gradle/versions.gradle
index 77f7890f..9b813dc4 100644
--- a/gradle/versions.gradle
+++ b/gradle/versions.gradle
@@ -22,7 +22,6 @@ def generateVersionConstants(def sourceSet, def catalogName, def sourcesName) {
 	}
 
 	sourceSet.java.srcDir task
-	spotlessGroovyGradle.dependsOn task // Not quite sure why this is needed, but it fixes a warning.
 	compileKotlin.dependsOn task
 	sourcesJar.dependsOn task
 }
@@ -82,4 +81,4 @@ ${constants}
 	static def toSnakeCase(String input) {
 		return input.trim().replaceAll(/[^a-zA-Z0-9]+/, '_').toUpperCase()
 	}
-}
\ No newline at end of file
+}
diff --git a/settings.gradle b/settings.gradle
index 6b14589d..f4a60a4f 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1,4 +1,4 @@
-rootProject.name = name
+rootProject.name = "architectury-loom"
 
 dependencyResolutionManagement {
 	versionCatalogs {
@@ -9,4 +9,4 @@ dependencyResolutionManagement {
 			from(files("gradle/runtime.libs.versions.toml"))
 		}
 	}
-}
\ No newline at end of file
+}
